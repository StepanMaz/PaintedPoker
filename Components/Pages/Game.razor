@attribute [Route(Nav.Games + "/{id}")]
@using PaintedPoker.Game.Rules
@using PaintedPoker.Game.Services
@using PaintedPoker.Game.Table
@using PaintedPoker.Components.Game.Table
@using GameData = PaintedPoker.Game.Builder.Game;
@inject ILogger<Game> _logger;
@inject GameService GameService

@if (GameData is not null)
{
    <Table GameTable="GameData.GameTable" TableDataChanged="NotifyUpdate" />
}
else
{
    <MudLink Href="@Nav.CreateGame"></MudLink>
}

@code {
    [Parameter]
    public required string Id { get; set; }

    public GameData GameData { get; set; } = null!;

    private bool dirty = false;
    public void NotifyUpdate()
    {
        dirty = true;

        GameData.NotifyTableChanged();
    }

    public void HandleUpdate()
    {
        if (!dirty) InvokeAsync(StateHasChanged);

        dirty = false;
    }

    protected override void OnInitialized()
    {
        var gameName = new GameName(Id);
        if (!GameService.HasGame(gameName)) return;

        GameData = GameService.GetGame(gameName);
        GameData.TableChanged += HandleUpdate;
    }
}